name: Release Helm Chart

on:
    push:
        tags:
            - 'v[0-9]+.[0-9]+.[0-9]+*' # Matches v1.0.0, v1.0.0-alpha.1, etc.

env:
    REGISTRY: ghcr.io
    CHART_NAME: vitistack-crds

permissions:
    contents: write
    packages: write

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: 'go.mod'
                  cache: true

            - name: Set up Helm
              uses: azure/setup-helm@v4
              with:
                  version: 'latest'

            - name: Extract version from tag
              id: version
              run: |
                  VERSION=${GITHUB_REF#refs/tags/v}
                  echo "version=${VERSION}" >> $GITHUB_OUTPUT
                  echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
                  echo "Releasing version: ${VERSION}"

            - name: Generate CRDs
              run: make generate

            - name: Build
              run: make build

            - name: Run tests
              run: make test

            - name: Verify CRDs are sanitized
              run: make verify-crds

            - name: Update Helm chart templates
              run: |
                  echo "Copying CRDs to Helm chart templates..."
                  cp -v crds/*.yaml charts/vitistack-crds/templates/
                  echo "✓ CRDs copied to Helm chart"

            - name: Update Chart version
              run: |
                  VERSION=${{ steps.version.outputs.version }}
                  sed -i "s/^version: .*/version: ${VERSION}/" charts/vitistack-crds/Chart.yaml
                  sed -i "s/^appVersion: .*/appVersion: \"${{ steps.version.outputs.tag }}\"/" charts/vitistack-crds/Chart.yaml
                  echo "Updated Chart.yaml:"
                  cat charts/vitistack-crds/Chart.yaml

            - name: Lint Helm chart
              run: helm lint charts/vitistack-crds

            - name: Package Helm chart
              run: |
                  helm package charts/vitistack-crds -d .helm-dist/
                  echo "Packaged charts:"
                  ls -lh .helm-dist/

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Push Helm chart to OCI registry
              run: |
                  CHART_VERSION=${{ steps.version.outputs.version }}
                  CHART_PACKAGE=".helm-dist/${CHART_NAME}-${CHART_VERSION}.tgz"

                  echo "Pushing Helm chart to OCI registry..."
                  helm push "${CHART_PACKAGE}" oci://${{ env.REGISTRY }}/vitistack

                  echo "✓ Helm chart pushed successfully"
                  echo ""
                  echo "Chart is available at:"
                  echo "  oci://${{ env.REGISTRY }}/vitistack/${CHART_NAME}:${CHART_VERSION}"
                  echo ""
                  echo "To install:"
                  echo "  helm install ${CHART_NAME} oci://${{ env.REGISTRY }}/vitistack/${CHART_NAME} --version ${CHART_VERSION}"

            - name: Summary
              run: |
                  cat >> $GITHUB_STEP_SUMMARY << EOF
                  ## 🎉 Helm Chart Published for ${{ steps.version.outputs.tag }}

                  ### 📦 Helm Chart OCI Image

                  The Helm chart has been published to GitHub Container Registry:

                  \`\`\`bash
                  helm install vitistack-crds oci://${{ env.REGISTRY }}/vitistack/vitistack-crds --version ${{ steps.version.outputs.version }}
                  \`\`\`

                  ### 🔗 Links

                  - [Container Registry](https://github.com/vitistack/crds/pkgs/container/vitistack-crds)

                  ### ✅ Verification

                  - CRDs generated and validated
                  - Tests passed
                  - Helm chart linted
                  - OCI image pushed

                  ### 📝 Next Steps

                  Developers should manually create the GitHub Release with release notes.
                  EOF
